name: Android CI Debug

on:
  push:
    branches: ["**"]
    paths-ignore:
      - '**/*.md'
  pull_request:
    branches: ["**"]
    paths-ignore:
      - '**/*.md'
  workflow_dispatch:

jobs:
  # Etapa 1: Build do APK
  build_debug_apk:
    name: Build App Debug APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 20
        uses: actions/setup-java@v4
        with:
          java-version: '20'
          distribution: 'oracle'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Build with Gradle
        id: gradle_build_debug
        run: ./gradlew assembleDebug

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

  # Etapa 2: Envio do APK para o Telegram
  send_debug_apk:
    name: Send Debug APK
    runs-on: ubuntu-latest
    needs: build_debug_apk

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download debug APK
        uses: actions/download-artifact@v4
        with:
          name: app-debug

      - name: Rename APK file
        run: |
          mv app-debug.apk custom-app-debug.apk
          
      - name: Install Telethon
        run: |
          python -m pip install --upgrade pip
          pip install telethon

      - name: Send APK to Telegram
        env:
          API_ID: ${{ secrets.TELEGRAM_APP_API_ID }}
          API_HASH: ${{ secrets.TELEGRAM_APP_API_HASH }}
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          DESCRIPTION: "App by @robokinc"
        run: |
          python .github/telegram/send_apk.py "custom-app-debug.apk" "${{ secrets.TELEGRAM_CHAT_ID }}" "${{ secrets.TELEGRAM_BOT_TOKEN }}" "$DESCRIPTION"
